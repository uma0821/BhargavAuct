pipeline {
    agent any  // Runs on any available Jenkins agent/node

    environment {
        NODE_ENV = 'production' // Example environment variable
        API_KEY = credentials('api-key-id') // Example credentials from Jenkins
    }

    stages {
        // Stage 1: Clone Repository
        stage('Clone Repository') {
            steps {
                echo 'Cloning the repository...'
                git branch: 'main', url: 'https://github.com/uma0821/BhargavAuct.git'
            }
        }

        // Stage 2: Install Dependencies
        stage('Install Dependencies') {
            steps {
                echo 'Installing dependencies...'
                sh 'npm install' // Replace with your dependency manager (e.g., npm, yarn, pip, mvn, etc.)
            }
        }

        // Stage 3: Build
        stage('Build') {
            steps {
                echo 'Building the project...'
                sh 'npm run build' // Replace with your build command
            }
        }

        // Stage 4: Run Tests
        stage('Run Tests') {
            steps {
                echo 'Running tests...'
                sh 'npm test' // Replace with your testing command
            }
        }

        // Stage 5: Deploy
        stage('Deploy') {
            steps {
                echo 'Deploying application...'
                sh './deploy.sh' // Replace with your deployment script
            }
        }
    }

    post {
        // Actions to perform after the pipeline (success, failure, or always)
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check logs for details.'
        }
        always {
            echo 'Cleaning up workspace...'
            cleanWs() // Cleans the Jenkins workspace
        }
    }
}
